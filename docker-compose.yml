version: "3.8"

x-logging:
  &logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/loki/api/v1/push"

services:
  api-gateway:
    logging: *logging
    container_name: api-gateway
    restart: unless-stopped
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/api-gateway/
    expose:
      - "80"
    ports:
      - "3000:80"
    networks:
      - form-network
      - auth-network
      - plugin-manager-network
    depends_on:
      - form-service
      - auth-service
      - plugin-manager-service
    

  form-service:
    logging: *logging
    container_name: form-service
    restart: unless-stopped
    labels:
      co.elastic.logs/enabled: true
    build:
      context: ./services/form-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/form-service/
    expose:
      - "80"
    depends_on:
      form-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_HOST: form-db
      DB_PORT: 5432
      DB_USER: form_service_man
      DB_PASSWORD: form_service_man
      DB_NAME: form_service_database
      DB_SSLMODE: disable
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    env_file:
      - .env
    networks:
      - form-network
    

  form-db:
    logging: *logging
    image: postgres:15
    container_name: form-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: form_service_man
      POSTGRES_PASSWORD: form_service_man
      POSTGRES_DB: form_service_database
    volumes:
      - form-db:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - form-network
    

  auth-service:
    logging: *logging
    container_name: auth-service
    restart: unless-stopped
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/auth-service/
    expose:
      - "80"
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_HOST: auth-db
      DB_PORT: 5432
      DB_USER: auth_service_man
      DB_PASSWORD: auth_service_man
      DB_NAME: auth_service_database
      DB_SSLMODE: disable
      JWT_SECRET: hAnjwHeNT2kpQmY8I46
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    networks:
      - auth-network
    

  auth-db:
    logging: *logging
    image: postgres:15
    container_name: auth-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: auth_service_man
      POSTGRES_PASSWORD: auth_service_man
      POSTGRES_DB: auth_service_database
    volumes:
      - auth-db:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - auth-network
    

  plugin-manager-service:
    logging: *logging
    container_name: plugin-manager-service
    restart: unless-stopped
    build:
      context: ./services/plugin-manager-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/plugin-manager-service/
    expose:
      - "80"
    depends_on:
      form-service:
        condition: service_started
      auth-service:
        condition: service_started
      plugin-manager-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_HOST: plugin-manager-db
      DB_PORT: 5432
      DB_USER: plugin_manager_service_man
      DB_PASSWORD: plugin_manager_service_man
      DB_NAME: plugin_manager_service_database
      DB_SSLMODE: disable
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
    networks:
      - plugin-manager-network

  plugin-manager-db:
    logging: *logging
    image: postgres:15
    container_name: plugin-manager-db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: plugin_manager_service_man
      POSTGRES_PASSWORD: plugin_manager_service_man
      POSTGRES_DB: plugin_manager_service_database
    volumes:
      - plugin-manager-db:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - plugin-manager-network
    

  google-sheets-service:
    logging: *logging
    container_name: google-sheets-service
    restart: unless-stopped
    build:
      context: ./services/plugins/google-sheets-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/plugins/google-sheets-service/
    expose:
      - "80"
    depends_on:
      - plugin-manager-service
      - form-service
    networks:
      - google-sheets-network
      - plugin-manager-network
      - form-network
    

  sms-service:
    logging: *logging
    container_name: sms-service
    restart: unless-stopped
    build:
      context: ./services/plugins/sms-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/plugins/sms-service/
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      TWILIO_PHONE_NUMBER: "+13344228645"
      TWILIO_AUTH_TOKEN: "ff420a510c3966752bf64009c67d7ab9"
      TWILIO_ACCOUNT_SID: "AC6ddfca6c50e191d8afcc4f5d73a3406a"
    expose:
      - "80"
    depends_on:
      - plugin-manager-service
      - form-service
      - auth-service
    networks:
      - sms-network
      - plugin-manager-network
      - auth-network
    

  slang-service:
    logging: *logging
    container_name: slang-service
    restart: unless-stopped
    build:
      context: ./services/plugins/slang-service
      dockerfile: Dockerfile
    x-develop:
      watch:
        - action: rebuild
          path: ./services/plugins/slang-service/
    expose:
      - "80"
    depends_on:
      - plugin-manager-service
      - form-service
    networks:
      - slang-network
      - plugin-manager-network
      - form-network

  rabbitmq:
    logging: *logging
    container_name: "rabbitmq"
    image: "rabbitmq:3-management-alpine"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 3
    expose:
      - "5672"
    ports:
      - "15672:15672"
    user: "1000"
    environment:
      RABBITMQ_ERLANG_COOKIE: rabbitmq.cookie
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - auth-network
      - form-network
      - plugin-manager-network
      - sms-network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./loki/data:/data/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - loki
 #
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "1000"
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "4000:3000"
    networks:
      - loki

networks:
  form-network:
    driver: bridge
  auth-network:
    driver: bridge
  plugin-manager-network:
    driver: bridge
  google-sheets-network:
    driver: bridge
  sms-network:
    driver: bridge
  slang-network:
    driver: bridge
  loki:
    driver: bridge

volumes:
  grafana:
  rabbitmq:
  auth-db:
  form-db:
  plugin-manager-db:
